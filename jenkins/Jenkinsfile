pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "my-node-app-image"  // Define Docker image name
        DOCKER_TAG = "satishuser1/devyan-repo1:v1"
    }

    stages {

        stage('Checkout') {
            steps {
                echo "üîç Cloning repository..."
                git url: 'https://github.com/Devyan-m/repo1.git', branch: 'master', credentialsId: 'github-pat-token-Devyan-repo1'
                checkout scm // Clones the code from GitHub (repository set in Jenkins)
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "üì¶ Running npm install..."
                sh 'npm install'  // Installs the Node.js dependencies (e.g., express)
            }
        }

        stage('Docker Build') {
            steps {
                echo "üê≥ Building Docker image..."
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                
                echo "logging Docker image to registry..."
                withCredentials([usernamePassword(
                    credentialsId: 'satishDockerPublicPAT',
                    usernameVariable: 'MY_USER',
                    passwordVariable: 'MY_PASS'
                )]) {
                    sh 'echo $MY_PASS | docker login -u $MY_USER --password-stdin'
                }
              
                echo "Pushing Docker image to registry..."
                sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
            }
        }
        
        stage('Run Docker Container') {
            steps {
                echo "üöÄ Running Docker container..."
                sh """
                docker ps -q -f name=${DOCKER_IMAGE} | xargs -r docker stop
                docker ps -a -q -f name=${DOCKER_IMAGE} | xargs -r docker rm
                docker run -d -p 3000:3000 --name ${DOCKER_IMAGE} ${DOCKER_IMAGE}:${DOCKER_TAG}
                """
            }
        }
         stage('Deploy using deploy.sh') {
            steps {
                echo "‚öôÔ∏è Running external deploy script..."
                sh 'chmod +x jenkins/deploy.sh'
                sh './jenkins/deploy.sh'  // Assuming deploy.sh is in the root of your repository
            }
        }

    }

    post {
        failure {
            echo "‚ùå Deployment failed!"
            emailext (
              subject: "‚ùå Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
              body: "Build #${env.BUILD_NUMBER} failed! Logs here: ${env.BUILD_URL}",
              to: 'devyanshimachcha@gmail.com',
              attachLog: true
            )
        }
        success {
            echo "üéâ Deployment successful!"
            emailext (
              subject: "‚úÖ Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
              body: "Build #${env.BUILD_NUMBER} succeeded! View it: ${env.BUILD_URL}",
              to: 'devyanshimachcha@gmail.com',
              attachLog: true
    )
        }
    }
}

