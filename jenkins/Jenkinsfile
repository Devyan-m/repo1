pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "my-node-app-image"  // Define Docker image name
        DOCKER_TAG = "latest"
    }

    stages {

        stage('Checkout') {
            steps {
                echo "🔍 Cloning repository..."
                git url: 'https://github.com/Devyan-m/repo1.git', branch: 'master', credentialsId: 'github-pat-token-Devyan-repo1'
                checkout scm // Clones the code from GitHub (repository set in Jenkins)
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "📦 Running npm install..."
                sh 'npm install'  // Installs the Node.js dependencies (e.g., express)
            }
        }

        stage('Docker Build') {
            steps {
                echo "🐳 Building Docker image..."
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
            }
        }
        
        stage('Run Docker Container') {
            steps {
                echo "🚀 Running Docker container..."
                sh """
                docker ps -q -f name=${DOCKER_IMAGE} | xargs -r docker stop
                docker ps -a -q -f name=${DOCKER_IMAGE} | xargs -r docker rm
                docker run -d -p 3000:3000 --name ${DOCKER_IMAGE} ${DOCKER_IMAGE}:${DOCKER_TAG}
                """
            }
        }
         stage('Deploy using deploy.sh') {
            steps {
                echo "⚙️ Running external deploy script..."
                sh 'chmod +x jenkins/deploy.sh'
                sh './jenkins/deploy.sh'  // Assuming deploy.sh is in the root of your repository
            }
        }

    }

    post {
        failure {
            echo "❌ Deployment failed!"
        }
        success {
            echo "🎉 Deployment successful!"
        }
    }
}

